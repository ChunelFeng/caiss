name: Release

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

env:
  BUILD_TYPE: Release

permissions:
  contents: read

jobs:
  build-windows:
    runs-on: windows-latest
    env:
      BOOST_URL: https://boostorg.jfrog.io/artifactory/main/release/1.80.0/source/boost_1_80_0.zip
      EIGEN_URL: https://gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.zip
    steps:
    - uses: actions/checkout@v3
            
    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build && cmake -E make_directory ${{github.workspace}}/thrid-party

    - name: Cache Third Party Library
      id: cacheLibrary
      uses: actions/cache@v3.0.11
      with:
        # A list of files, directories, and wildcard patterns to cache and restore
        path: ${{github.workspace}}/thrid-party
        key: ${{env.BOOST_URL}}-${{env.EIGEN_URL}}
        
    - name: Download Boost
      uses: gamedev-thingy/Download-Extract@done
      if: steps.cacheLibrary.outputs.cache-hit != 'true'
      with:
        url: ${{env.BOOST_URL}}
        destination: ${{github.workspace}}/thrid-party
        ZIPname: boost_1_80_0
        
    - name: Download Eigen3
      uses: gamedev-thingy/Download-Extract@done
      if: steps.cacheLibrary.outputs.cache-hit != 'true'
      with:
        url: ${{env.EIGEN_URL}}
        destination: ${{github.workspace}}/thrid-party
        ZIPname: eigen-3.4.0
        
    - run: ls ${{github.workspace}}/thrid-party
    
    - name: Configure CMake
      shell: bash
      env:
        MY_BOOST_PATH: ${{github.workspace}}/thrid-party/boost_1_80_0/boost_1_80_0
        MY_EIGEN_PATH: ${{github.workspace}}/thrid-party/eigen-3.4.0/eigen-3.4.0
      working-directory: ${{github.workspace}}/build
      run: cmake -S $GITHUB_WORKSPACE -G "Visual Studio 17 2022"

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE
        
    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      if: "env.BUILD_TYPE == 'Release'"
      with:
        name: windows_artficats
        path: ${{github.workspace}}/build/${{env.BUILD_TYPE}}/*.dll
